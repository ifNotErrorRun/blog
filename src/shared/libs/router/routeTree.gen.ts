/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../../pages/__root'
import { Route as ContactRouteImport } from './../../../pages/contact/route'
import { Route as ArticlesRouteImport } from './../../../pages/articles/route'
import { Route as AboutRouteImport } from './../../../pages/about/route'
import { Route as IndexImport } from './../../../pages/index'
import { Route as ContactIndexImport } from './../../../pages/contact/index'
import { Route as ArticlesIndexImport } from './../../../pages/articles/index'
import { Route as AboutIndexImport } from './../../../pages/about/index'

// Create/Update Routes

const ContactRouteRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesRouteRoute = ArticlesRouteImport.update({
  id: '/articles',
  path: '/articles',
  getParentRoute: () => rootRoute,
} as any)

const AboutRouteRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContactRouteRoute,
} as any)

const ArticlesIndexRoute = ArticlesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ArticlesRouteRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRoute
    }
    '/articles': {
      id: '/articles'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesRouteImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof AboutRouteImport
    }
    '/articles/': {
      id: '/articles/'
      path: '/'
      fullPath: '/articles/'
      preLoaderRoute: typeof ArticlesIndexImport
      parentRoute: typeof ArticlesRouteImport
    }
    '/contact/': {
      id: '/contact/'
      path: '/'
      fullPath: '/contact/'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof ContactRouteImport
    }
  }
}

// Create and export the route tree

interface AboutRouteRouteChildren {
  AboutIndexRoute: typeof AboutIndexRoute
}

const AboutRouteRouteChildren: AboutRouteRouteChildren = {
  AboutIndexRoute: AboutIndexRoute,
}

const AboutRouteRouteWithChildren = AboutRouteRoute._addFileChildren(
  AboutRouteRouteChildren,
)

interface ArticlesRouteRouteChildren {
  ArticlesIndexRoute: typeof ArticlesIndexRoute
}

const ArticlesRouteRouteChildren: ArticlesRouteRouteChildren = {
  ArticlesIndexRoute: ArticlesIndexRoute,
}

const ArticlesRouteRouteWithChildren = ArticlesRouteRoute._addFileChildren(
  ArticlesRouteRouteChildren,
)

interface ContactRouteRouteChildren {
  ContactIndexRoute: typeof ContactIndexRoute
}

const ContactRouteRouteChildren: ContactRouteRouteChildren = {
  ContactIndexRoute: ContactIndexRoute,
}

const ContactRouteRouteWithChildren = ContactRouteRoute._addFileChildren(
  ContactRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRouteRouteWithChildren
  '/articles': typeof ArticlesRouteRouteWithChildren
  '/contact': typeof ContactRouteRouteWithChildren
  '/about/': typeof AboutIndexRoute
  '/articles/': typeof ArticlesIndexRoute
  '/contact/': typeof ContactIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/articles': typeof ArticlesIndexRoute
  '/contact': typeof ContactIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRouteRouteWithChildren
  '/articles': typeof ArticlesRouteRouteWithChildren
  '/contact': typeof ContactRouteRouteWithChildren
  '/about/': typeof AboutIndexRoute
  '/articles/': typeof ArticlesIndexRoute
  '/contact/': typeof ContactIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/articles'
    | '/contact'
    | '/about/'
    | '/articles/'
    | '/contact/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/articles' | '/contact'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/articles'
    | '/contact'
    | '/about/'
    | '/articles/'
    | '/contact/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRouteRoute: typeof AboutRouteRouteWithChildren
  ArticlesRouteRoute: typeof ArticlesRouteRouteWithChildren
  ContactRouteRoute: typeof ContactRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRouteRoute: AboutRouteRouteWithChildren,
  ArticlesRouteRoute: ArticlesRouteRouteWithChildren,
  ContactRouteRoute: ContactRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/articles",
        "/contact"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about/route.tsx",
      "children": [
        "/about/"
      ]
    },
    "/articles": {
      "filePath": "articles/route.tsx",
      "children": [
        "/articles/"
      ]
    },
    "/contact": {
      "filePath": "contact/route.tsx",
      "children": [
        "/contact/"
      ]
    },
    "/about/": {
      "filePath": "about/index.tsx",
      "parent": "/about"
    },
    "/articles/": {
      "filePath": "articles/index.tsx",
      "parent": "/articles"
    },
    "/contact/": {
      "filePath": "contact/index.tsx",
      "parent": "/contact"
    }
  }
}
ROUTE_MANIFEST_END */
