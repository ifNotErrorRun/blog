
# 프로젝트 구성

## 기술 스택
- 프레임워크
  - React19 : frontend
- 배포, 서버리스
  - Netlify : deployment and serverless functions
- 데이터베이스
  - Supabase : database and authentication
    - 로컬 개발: 도커 self-hosted Supabase
    - 배포 환경: 웹 Supabase
  - 인증 시스템:
    - JWT 기반 인증
    - Netlify 함수를 통한 서버 사이드 인증 처리
- 상태 관리 (전역, 서버)
  - Zustand : state management
  - React Query : server state management
- 스타일
  - Tailwind CSS : styling
- 타입스크립트
  - TypeScript : type safety
- 버전 관리
  - GitHub : version control
- UI 구성 요소
  - Shadcn/UI : UI components
- 테스트 (추후 추가 예정)
  - Vitest : unit testing
  - React Testing Library : component testing
  - Playwright : end-to-end testing
- 문서화
  - Storybook : UI 구성 요소 문서화
  - OpenAPI : API 문서화
  - Markdown : 기타 문서화
- CI/CD
  - GitHub Actions : CI/CD
- 코드 품질
  - Biome : linter and formatter

## 프로젝트 구조 (FSD Architecture)
```
/docs - 문서화
/src
  /app - 애플리케이션 진입점
  /features - 기능별 구성 요소 
    /[feature_name] - 각 기능별 폴더
      /blocks - 기능별 구성 요소
      /containers - 기능별 컨테이너
      /interactions - 기능별 상호작용
      /queries - 기능별 API 호출
      /schemas - 기능별 스키마 정의
  /pages - 페이지 구성 요소 (파일 기반 라우팅)
  /shared - 공유 구성 요소
    /assets - 이미지 및 기타 정적 자산
    /components - 재사용 가능한 구성 요소
      /blocks - 재사용 가능한 블록
      /containers - 재사용 가능한 컨테이너
      /interactions - 재사용 가능한 상호작용
      /layouts - 레이아웃 구성 요소
      /ui - Shadcn/UI 구성 요소
    /constants - 상수 및 설정
    /functions - Netlify serverless 함수
    /libs - 라이브러리 및 헬퍼 함수
      /axios - Axios 인스턴스 및 설정
      /react-query - React Query 설정
      /supabase - Supabase 클라이언트 설정
      /router - tanstack router 설정
      /shadcn - Shadcn/UI 설정
    /stores - 상태 관리 (Zustand)
    /styles - Tailwind CSS 스타일
    /types - TypeScript 타입 정의
  /widgets - 재사용 가능한 구성 요소
```

## 개발 규칙
### 네이밍 규칙
- 폴더 및 파일명은 kebab-case로 작성
  - 예: `my-component`, `my-feature`
- 변수명, 함수명은 camelCase로 작성
  - 예: `myVariable`, `myFunction`
- 클래스명, 컴포넌트명은 PascalCase로 작성
  - 예: `MyClass`, `MyComponent`
- 상수명은 UPPER_SNAKE_CASE로 작성
  - 예: `MY_CONSTANT`

## 개발 워크플로우
- Cline이 코드 변경 작성 및 검토 지원
- Netlify에 main 브랜치에서 자동 배포
- 인증 시스템 테스트:
  - 로컬: 도커 Supabase 연결 테스트
  - 배포: 웹 Supabase 연결 테스트

## 보안
다음을 읽거나 수정하지 마세요:
- .env 파일
- **/config/secrets.*
- API 키 또는 자격 증명이 포함된 모든 파일
